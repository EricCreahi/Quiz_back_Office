#pragma checksum "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "27abdeca61956b0a4d423a53694437a0700dd94290f9354618d04ecd7c9ae097"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_SousQuestion), @"mvc.1.0.view", @"/Views/Home/SousQuestion.cshtml")]
namespace AspNetCore
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\_ViewImports.cshtml"
using WebAppGedQuestionnaire

#nullable disable
    ;
#nullable restore
#line 2 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\_ViewImports.cshtml"
using WebAppGedQuestionnaire.Models

#line default
#line hidden
#nullable disable
    ;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"27abdeca61956b0a4d423a53694437a0700dd94290f9354618d04ecd7c9ae097", @"/Views/Home/SousQuestion.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"2c6fe54c853d40c83a5de5742da48b229a08f3961511dc69cfb4c3265a1630fd", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Home_SousQuestion : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/images.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("80%"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("rounded float-start"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("prince tatie"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
  
    ViewData["Title"] = "Questionnaire";


#line default
#line hidden
#nullable disable

            WriteLiteral("\r\n\r\n<div class=\"container\">\r\n\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"row\">\r\n            <div class=\"col-2\">\r\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "27abdeca61956b0a4d423a53694437a0700dd94290f9354618d04ecd7c9ae0975132", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""col-10"">
                <div class=""text-center"">
                    <h1 class=""display-4"" style=""font-family: LoveStoryRough; color: #00A551;"">
                        QUESTIONNAIRE
                    </h1>
                    <p>
                        Veuillez répondre à la question puis cliquez sur <span style=""font-style:italic"">Suivant</span> pour avancer. <br />
                        Cochez une et une seule bonne réponse.
                    </p>
                    <div id=""theme_question""></div>
                </div>
                <div class=""float-start mt-3"" id=""positioin_question""></div>
            </div>
        </div>

    </div>

    <div class=""row justify-content-center"">
        <div class=""row"">
            <div class=""col-12"">
                <div class=""card"">

                    <div id=""question""></div>
                    <div class=""card-body"">
                        <div style=""padding-left:15px"">
    ");
            WriteLiteral(@"                        <div id=""listeChoix"">

                            </div>

                        </div>
                    </div>

                    <div class=""card-footer "">
                        <div class=""row"">
                            <div class=""col-6"">
                                <div class=""row justify-content-start"">
                                    <a id=""suivant"" onclick=""callQuestion()"" class="" btn btn-primary"">Suivant</a>
                                </div>
                            </div>

                            <div class=""col-6"">
                                <div class=""row justify-content-end"">
                                    <a id=""lienValider"" onclick=""callValider()"" hidden class=""btn btn-success"">Terminer</a>
                                </div>
                            </div>

                        </div>

                    </div>


                </div>
            </div>
        </div>
    </div>
</div>
");
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\r\n  \r\n\r\n    <script type=\"text/javascript\">\r\n        \r\n\r\n        var usermatricule = \'\';\r\n        var nbre_question = 0;\r\n\r\n        var question = ");
                Write(
#nullable restore
#line 81 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                        ViewData["question"]

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(";\r\n        var numero = ");
                Write(
#nullable restore
#line 82 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                      ViewData["numero"]

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(";\r\n        var nbreChoix = ");
                Write(
#nullable restore
#line 83 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                         ViewData["nbreChoix"]

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(";\r\n        var nbreChoixTampon =  ");
                Write(
#nullable restore
#line 84 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                ViewData["nbreChoix"]

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(";\r\n\r\n        var page_suivante =  ");
                Write(
#nullable restore
#line 86 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                              ViewData["numero"]

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(";\r\n        var position = ");
                Write(
#nullable restore
#line 87 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                        ViewData["position"]

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@";



        var page_suivante_2 = 0;
        var page_actuelle = position;

        var cocher = 0;

        const cocherTampon = {
            date_Cocher: '',
            matricule: '',
            choixId: '',
            page: '',
            position: '',
            questionId: '',
            sousQuestionId: '',
            nbreChoixRestant: '',
            suivant:'',
            precedent: ''
        };

        var  listeCocher = [1];
        var listeCocher2 = [];
        let compteur = 0;
        let sousQuestionId = 0;
        var now = new Date();
        var userCreationDate = moment(now, 'DD/MM/YYYY hh:mm:ss', true).format();

        $(""#deConnexion"").attr('hidden', false);
        $(""#connexion"").attr('hidden', true);


        $(function () {

            usermatricule = localStorage.getItem(""usermatricule"");
        

            $.ajax({
                'async': false,
                'global': false,
                'type': 'GET',
              ");
                WriteLiteral("  \'url\': \'");
                Write(
#nullable restore
#line 129 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                         Url.Action("ReponseSousQuestion", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"' + ""?numero="" + numero + ""&id="" + question,
                'dataType': ""json"",
                'success': function (response) {
              

                    nbre_question = response.data.length;
                    $('#theme_question').html(`<h2>THEME :</h2><i>${response.oneData.question.libelle_Question}</i>`);
                    $('#positioin_question').html(`<h4>Question N° : ${position}-${page_suivante} / ${nbre_question}</h4>`);
                    $('#question').html(`<h5 class=""card-header"" style=""font-family: LoveStoryRough; color: #03224c;"">${response.oneData.libelle_Sous_Question}</h5>`);



                    if (position == 5 && page_suivante == 6 ) {

                        $('#lienValider').attr('hidden', false);
                        $('#suivant').attr('hidden', true);
                    }

                                   

                    const choix = response.oneData.choixes;                 
                    var_position = numero;
             ");
                WriteLiteral(@"       page_suivante_2 = page_suivante;

                   
                 
                    page_suivante++;                
                    nbreChoix--;

                   

                    if (choix.length > 0) {

                        choix.forEach(element => {

                            compteur++;
                            sousQuestionId = element.sousQuestion.sousQuestionId;

                             $(""#listeChoix"").append(
                                '<div class=""form-check"">' +
                                '<input class= ""form-check-input"" type = ""checkbox""  onclick=""selectOnlyThis(this.id,compteur)""  value = ""' + element.choixId + '"" id=""CheckBox_' + compteur + '"">' +
                                '<label class=""form-check-label"" for=""flexCheckDefault"">'
                                + element.libelle_Choix +
                                '</label >' +
                                '<div>'
                                )
            ");
                WriteLiteral(@"                });

                        };

                            },
                            error: function (data) {
                                    console.log(data);

                           }
                     });

     

         });

        function callQuestion() {
         
            if (listeCocher[0].suivant == true) {


                $.ajax({
                    'async': false,
                    'global': false,
                    'type': 'GET',
                    'url': '");
                Write(
#nullable restore
#line 199 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                             Url.Action("ChoixSousQuestion", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"' + ""?numero="" + page_suivante + ""&questionid="" + question,
                    'dataType': ""json"",
                    'success': function (response_10) {

                        if (nbreChoix == 0) {


                            // if (question == 7) {
                            //     question = 5;
                            // }
                            // if (question == 8) {
                            //     question = 6;
                            // }

                                $.ajax({
                                'async': false,
                                'global': false,
                                'type': 'GET',
                                'url': '");
                Write(
#nullable restore
#line 217 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                         Url.Action("LotSousQuestions", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"',
                                'dataType': ""json"",
                                'success': function (response) {
                               

                                    //----- Lot d'ingrémentation des sous questions   ---------
                                        $.ajax({
                                        'async': false,
                                        'global': false,
                                        'type': 'GET',
                                        'url': '");
                Write(
#nullable restore
#line 227 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                                 Url.Action("ChoixSousQuestion", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"' + ""?numero="" + response.data[0].id + ""&questionid="" + response.data[question].page,
                                        'dataType': ""json"",
                                        'success': function (response_2) {
                                            _question = response_2.oneData.numero_Sous_Question;

                                            var url = '");
                Write(
#nullable restore
#line 232 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                                        Url.Action("SousQuestion", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"' + ""?page="" + response.data[position].page + ""&id="" + _question + ""&nbreChoix="" + response.data[position].nbreChoix;
                                            window.location.href = url;
                                        }
                                    });
                                    //--- End Lot d'ingrémentation des sous questions ---------
                                }
                            });

                        } else {
                            var url = '");
                Write(
#nullable restore
#line 241 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                        Url.Action("SousQuestion", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"' + ""?page="" + question + ""&id="" + page_suivante + ""&nbreChoix="" + nbreChoix;
                            window.location.href = url;
                        }

                    },
                    error: function (data) {
                        console.log(data);

                    }
                });                 
                saveCocheTampon();
               

            } else {

                DevExpress.ui.notify({
                    message: ""Vous devez cocher une reponse !"",
                    position: {
                        my: ""center top"",
                        at: ""right top""
                    }
                }, ""error"", 6000)



            }



        }

        function callValider() {
           

            if (listeCocher[0].suivant == true) {                

                saveCocheTampon2(listeCocher[0]);

                   // saveCocheTampon();
                    // saveCoche(usermatricule);
                    ");
                WriteLiteral("// saveLotCocher(listeCocher2);             \r\n                    // deleteCocheTampon(usermatricule);   \r\n                    \r\n                    var url = \'");
                Write(
#nullable restore
#line 284 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                Url.Action("Valider", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"';
                    window.location.href = url;



            } else {


                DevExpress.ui.notify({
                    message: ""Vous devez cocher une reponse !"",
                    position: {
                        my: ""center top"",
                        at: ""right top""
                    }
                }, ""error"", 6000)


            }

             




        }

        function saveCoche(matricule) {

            listeCocher2 = [];

            if (matricule) {

                            $.ajax({
                           'async': false,
                           'global': false,
                           'type': 'GET',
                           'url': '");
                Write(
#nullable restore
#line 320 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                    Url.Action("ListeCocherTampon", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"' + ""?matricule="" + matricule,
                           'dataType': ""json"",
                           'success': function (response) {

                               console.log(response.data.length);

                               response.data.forEach(element => {
                                   let cocher = {};
                                   cocher = {
                                       date_Cocher: element.date_Cocher,
                                       matricule: element.matricule,
                                       choixId: element.choixId
                                   };

                                   listeCocher2.push(cocher);
                                });

                           },
                             error: function (data) {
                                   console.log(data);

                             }
                           });
            }
        }

        function deleteCocheTampon(matricule) {

       ");
                WriteLiteral("     if (matricule) {\r\n\r\n\r\n                   $.ajax({\r\n                           \'async\': false,\r\n                           \'global\': false,\r\n                           \'type\': \'GET\',\r\n                           \'url\': \'");
                Write(
#nullable restore
#line 355 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                    Url.Action("FindCocherTamponForDelete", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"' + ""?matricule="" + matricule,
                           'dataType': ""json"",
                           'success': function (response) {
                               console.log(response);


                           },
                             error: function (data) {
                                   console.log(data);

                             }
                           });

            }
        }

        function saveLotCocher(listeCocher2) {

            var data = JSON.stringify( listeCocher2 );

             //--- enregistrer element par element dans table Cocher
                           $.ajax({
                               type: ""POST"",
                               url: '");
                Write(
#nullable restore
#line 378 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                      Url.Action("AjouterCocher", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"',
                               traditional: true,
                               data: data,
                               contentType: ""application/json; charset=utf-8"",
                                success: function (response) {
                                         console.log(response);

                               },
                                error: function (data) {
                                   console.log(data);
                                }
                          });
        }

        function saveCocheTampon() {

            listeCocher.forEach(element => {
             
                if (element) {

                             $.ajax({
                                       'type':'POST',
                                       'url': '");
                Write(
#nullable restore
#line 400 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                                Url.Action("CocherTampon", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"',
                                       'data':element,
                                       'dataType': ""json"",
                                        'success': function (response) {

                                            console.log(response);

                                        },
                                         error: function (data) {
                                               console.log(data);
                                         }
                                 });
                             
                        };
                }

            );
        }

        function saveCocheTampon2(oneListeCocher) {

           // oneListeCocher.forEach(element => {

            if (oneListeCocher) {                   

                    $.ajax({
                        'type': 'POST',
                        'url': '");
                Write(
#nullable restore
#line 427 "C:\Workspace\WebAppGedQuestionnaireV2\WebAppGedQuestionnaire\Views\Home\SousQuestion.cshtml"
                                 Url.Action("CocherTampon", "Home")

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@"',
                        'data': oneListeCocher,
                        'dataType': ""json"",
                        'success': function (response) {

                            console.log(response);

                        },
                        error: function (data) {
                            console.log(data);
                        }
                    });

                };
           // });
        }

        function callCocheTampon(_a){


            switch (_a) {

                case 2:

                    $('#CheckBox_1').on('change', function () {
                        if (this.checked) {

                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, position: page_suivante, questionId: question, sousQuestionId: sousQuestionId ,suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choix");
                WriteLiteral(@"Id == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_2').on('change', function () {
                        if (this.checked) {

                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, position: page_suivante, questionId: question, sousQuestionId: sousQuestionId, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    break;

                case 3:

                    $('#CheckBox_1').on('change', function () {
                        if (this.checked) {

                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: thi");
                WriteLiteral(@"s.value, page: page_actuelle, position: page_suivante_2, questionId: question, sousQuestionId: sousQuestionId, nbreChoixRestant: nbreChoixRestant, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_2').on('change', function () {
                        if (this.checked) {

                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, position: page_suivante_2, questionId: question, sousQuestionId: sousQuestionId, nbreChoixRestant: nbreChoixRestant, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
          ");
                WriteLiteral(@"              }
                    });

                    $('#CheckBox_3').on('change', function () {
                        if (this.checked) {

                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, position: page_suivante_2, questionId: question, sousQuestionId: sousQuestionId, nbreChoixRestant: nbreChoixRestant, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    break;

                case 4:


                    break;

                case 5:

                    $('#CheckBox_1').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, ch");
                WriteLiteral(@"oixId: this.value, page: page_actuelle, position: page_suivante, questionId: question, sousQuestionId: sousQuestionId, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_2').on('change', function () {
                        if (this.checked) {

                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, position: page_suivante, questionId: question, sousQuestionId: sousQuestionId, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $(");
                WriteLiteral(@"'#CheckBox_3').on('change', function () {
                        if (this.checked) {

                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, position: page_suivante, questionId: question, sousQuestionId: sousQuestionId, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_4').on('change', function () {
                        if (this.checked) {

                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, position: page_suivante, questionId: question, sousQuestionId: sousQuestionId, suivant: true, precedent: false })

                        } else {
                           ");
                WriteLiteral(@" let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_5').on('change', function () {
                        if (this.checked) {

                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, position: page_suivante, questionId: question, sousQuestionId: sousQuestionId, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    break;

            }

        }

        function selectOnlyThis(id, compteur) {


        for (var i = 1; i <= compteur; i++) {

            if (""CheckBox_"" + i === id && document.getElementById(""CheckBox_"" ");
                WriteLiteral(@"+ i).checked === true) {

                $('#CheckBox_'+ i).on('change', function () {
                    
                    if (this.checked) {
                        listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, position: page_suivante_2, questionId: question, sousQuestionId: sousQuestionId, nbreChoixRestant: nbreChoixTampon, suivant: true, precedent: false })
                    }
                });


              } else {
                                                      
                document.getElementById(""CheckBox_"" + i).checked = false;

                if (document.getElementById(""CheckBox_"" + i).checked == false) {
                        
                        let v = listeCocher.findIndex(el => el.choixId == this.value);
                        listeCocher.splice(v, 1);

                    

                }
                        

               




                }
       ");
                WriteLiteral("     }\r\n     }\r\n\r\n    </script>\r\n\r\n\r\n");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
