@{
    ViewData["Title"] = "Questionnaire";
   
}


<div class="container">

    <div class="row justify-content-center">        
            <div class="row">
                <div class="col-12">
                    <div class="text-center">

                        <h1 class="display-4" style="font-family: LoveStoryRough; color: #FD3F92;">
                            QUESTIONNAIRE
                        </h1>
                        <p>
                            Veuillez répondre à la question puis cliquez sur <span style="font-style:italic">Suivant</span> pour avancer. <br />
                            Cochez sur la ou les bonnes réponses.
                        </p>
                        <div id="positioin_question"></div>
                    </div>
                </div>       
            </div>       
     </div>

    <div class="row justify-content-center">
        <div class="row">
            <div class="col-12">
                <div class="card">

                    <div id="question"></div>
                    <div class="card-body">
                        <div style="padding-left:15px">
                            <div id="listeChoix">

                            </div>

                        </div>
                    </div>

                    <div class="card-footer ">
                        <div class="row">
                            <div class="col-6">
                                <div class="row justify-content-start">
                                    <a id="suivant" onclick="callQuestion()" class=" btn btn-primary">Suivant</a>
                                </div>
                            </div>

                            <div class="col-6">
                                <div class="row justify-content-end">
                                    <a id="lienValider" onclick="callValider()" hidden class="btn btn-success">Terminer</a>
                                </div>                               
                            </div>

                        </div>                    
                        
                    </div>


                </div>
        </div>
    </div>
</div>
</div>

@section Scripts {

    <script type="text/javascript">

        var usermatricule = '';
        var nbre_question = 0;
        var question = @ViewData["item"];
        var page_suivante = @ViewData["page"];
        var page_actuelle =  @ViewData["page"];
        var cocher = 0;
        const cocherTampon = {
            date_Cocher: '',
            matricule: '',
            choixId: '',
            page: '',
            questionId: '',
            suivant:'',
            precedent: ''
        };

        listeCocher = [];
        var listeCocher2 = [];
        let compteur = 0;
        var now = new Date();
        var userCreationDate = moment(now, 'DD/MM/YYYY hh:mm:ss', true).format();

        $("#deConnexion").attr('hidden', false);
        $("#connexion").attr('hidden', true);


        $(function () {

            usermatricule = localStorage.getItem("usermatricule");

            $.ajax({
                'async': false,
                'global': false,
                'type': 'GET',
                'url': '@Url.Action("ReponseSousQuestion", "Home")' + "?id=" + question,
                'dataType': "json",
                'success': function (response) {

                    nbre_question = response.data.length;


                    $('#positioin_question').html(`<h3>Question N° : ${page_suivante} / ${nbre_question}</h3>`);

                    $('#question').html( `
                                           <h5 class="card-header" style="font-family: LoveStoryRough; color: #03224c;">
                                              ${response.oneData.libelle_Question}
                                            </h5>
                                        `);

                    if (page_suivante == nbre_question) {

                        $('#lienValider').attr('hidden', false);

                        $('#suivant').attr('hidden', true);
                    }

                    const choix = response.oneData.choixes;

                    page_suivante ++;


                    if (choix.length > 0) {

                        choix.forEach(element => {
                            compteur++;
                             $("#listeChoix").append(
                                '<div class="form-check">' +
                                '<input class= "form-check-input" type = "checkbox" value = "' + element.choixId + '" id="CheckBox_' + compteur + '">' +
                                '<label class="form-check-label" for="flexCheckDefault">'
                                + element.libelle_Choix +
                                '</label >' +
                                '<div>'
                                )
                            }
                        );
                        };

                            },
                            error: function (data) {
                                    console.log(data);

                           }
                     });

            switch (compteur) {

                case 2 :
                    callCocheTampon(2);
                    break;

                case 3:
                    callCocheTampon(3);
                    break;

                case 4:
                    callCocheTampon(4);
                    break;

                case 5:
                    callCocheTampon(5);
                    break;

            }

         });

        function callQuestion() {

            	     $.ajax({
                     'async': false,
                     'global': false,
                     'type': 'GET',
                     'url': '@Url.Action("ChoixQuestion", "Home")' + "?id=" + page_suivante,
                     'dataType': "json",
                     'success': function (response) {
                            var numero = response.oneData.questionId;
                            var url = '@Url.Action("Question", "Home")' + "?page=" + page_suivante + "&id=" + numero;
                            window.location.href = url;
                     },
                     error: function (data) {
                           console.log(data);

                     }
                     });

                     saveCocheTampon();
        }

        function callValider() {

                saveCocheTampon();

                saveCoche(usermatricule);

                saveLotCocher(listeCocher2);

                listeCocher = [];

                deleteCocheTampon(usermatricule);



                var url = '@Url.Action("Valider", "Home")';
                window.location.href = url;
        }

        function saveCoche(matricule) {
            if (matricule) {

                            $.ajax({
                           'async': false,
                           'global': false,
                           'type': 'GET',
                           'url': '@Url.Action("ListeCocherTampon", "Home")' + "?matricule=" + matricule,
                           'dataType': "json",
                           'success': function (response) {

                               response.data.forEach(element => {
                                   let cocher = {};
                                   cocher = {
                                       date_Cocher: element.date_Cocher,
                                       matricule: element.matricule,
                                       choixId: element.choixId
                                   };
                                   listeCocher2.push(cocher);
                                });

                           },
                             error: function (data) {
                                   console.log(data);

                             }
                           });
            }
        }

        function deleteCocheTampon(matricule) {

            if (matricule) {


                   $.ajax({
                           'async': false,
                           'global': false,
                           'type': 'GET',
                           'url': '@Url.Action("FindCocherTamponForDelete", "Home")' + "?matricule=" + matricule,
                           'dataType': "json",
                           'success': function (response) {
                               console.log(response);
                           

                           },
                             error: function (data) {
                                   console.log(data);

                             }
                           });

            }
        }

        function saveLotCocher(listeCocher2) {
            var data = JSON.stringify( listeCocher2 );

             //--- enregistrer element par element dans ta ble Cocher
                           $.ajax({
                               type: "POST",
                               url: '@Url.Action("AjouterCocher", "Home")',
                               traditional: true,
                               data: data,
                               contentType: "application/json; charset=utf-8",
                                success: function (response) {
                                         console.log(response);

                               },
                                error: function (data) {
                                   console.log(data);
                                }
                          });
        }

        function saveCocheTampon() {
            listeCocher.forEach(element => {

                if (element) {


                             $.ajax({
                                       'type':'POST',
                                       'url': '@Url.Action("CocherTampon", "Home")',
                                       'data':element,
                                       'dataType': "json",
                                        'success': function (response) {

                                            console.log(response);

                                        },
                                         error: function (data) {
                                               console.log(data);
                                         }
                                 });


                        };

                }

            );
        }

        function callCocheTampon(_a){


            switch (_a) {

                case 2:

                    $('#CheckBox_1').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_2').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    break;

                case 3:

                    $('#CheckBox_1').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_2').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_3').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    break;

                case 4:

                    $('#CheckBox_1').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v,1);
                        }

                    });

                    $('#CheckBox_2').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_3').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }


                    });

                    $('#CheckBox_4').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })

                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }


                    });

                    break;

                case 5:

                    $('#CheckBox_1').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_2').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_3').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_4').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    $('#CheckBox_5').on('change', function () {
                        if (this.checked) {
                            listeCocher.push({ date_Cocher: userCreationDate, matricule: usermatricule, choixId: this.value, page: page_actuelle, questionId: question, suivant: true, precedent: false })
                        } else {
                            let v = listeCocher.findIndex(el => el.choixId == this.value);
                            listeCocher.splice(v, 1);
                        }
                    });

                    break;

            }

        }

    </script>


}