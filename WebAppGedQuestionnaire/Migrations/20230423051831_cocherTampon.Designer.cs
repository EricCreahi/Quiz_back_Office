// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppGedQuestionnaire.Persistences;

namespace WebAppGedQuestionnaire.Migrations
{
    [DbContext(typeof(Db_Ged_Questionnaire_Context))]
    [Migration("20230423051831_cocherTampon")]
    partial class cocherTampon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Choix", b =>
                {
                    b.Property<int>("ChoixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EstVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle_Choix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("ChoixId");

                    b.HasIndex("QuestionId");

                    b.ToTable("TBL_CHOIX","dbo");
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Cocher", b =>
                {
                    b.Property<int>("CocherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChoixId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_Cocher")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CocherId");

                    b.HasIndex("ChoixId");

                    b.HasIndex("Matricule");

                    b.ToTable("TBL_COCHER","dbo");
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.CocherTampon", b =>
                {
                    b.Property<int>("CocherTamponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChoixId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_Cocher")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CocherTamponId");

                    b.ToTable("TBL_COCHER_TAMPON","dbo");
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Employe", b =>
                {
                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Anciennete")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Categorie")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Date_Sortie")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("Direction")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Equipe")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Fonction")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("NomPrenoms")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Matricule");

                    b.ToTable("TBL_EMPLOYE","dbo");
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EstVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle_Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero_Question")
                        .HasColumnType("int");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("TBL_QUESTION","dbo");
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Questionnaire", b =>
                {
                    b.Property<int>("QuestionnaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date_Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_debut")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionnaireId");

                    b.ToTable("TBL_QUESTIONNAIRE","dbo");
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Realiser", b =>
                {
                    b.Property<int>("RealiserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date_Realiser")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.HasKey("RealiserId");

                    b.HasIndex("Matricule");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("TBL_REALISER","dbo");
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Choix", b =>
                {
                    b.HasOne("WebAppGedQuestionnaire.Models.Question", "Question")
                        .WithMany("Choixes")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Cocher", b =>
                {
                    b.HasOne("WebAppGedQuestionnaire.Models.Choix", "Choix")
                        .WithMany()
                        .HasForeignKey("ChoixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppGedQuestionnaire.Models.Employe", "Employe")
                        .WithMany("Cochers")
                        .HasForeignKey("Matricule");
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Question", b =>
                {
                    b.HasOne("WebAppGedQuestionnaire.Models.Questionnaire", "Questionnaire")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAppGedQuestionnaire.Models.Realiser", b =>
                {
                    b.HasOne("WebAppGedQuestionnaire.Models.Employe", "Employe")
                        .WithMany("Realisers")
                        .HasForeignKey("Matricule");

                    b.HasOne("WebAppGedQuestionnaire.Models.Questionnaire", "Questionnaire")
                        .WithMany("Realisers")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
